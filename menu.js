import{INIT}from"./app.js";import meteors from"./visualization-js/meteors.js";import lasers from"./visualization-js/lasers.js";import players from"./visualization-js/players.js";import backgrounds from"./visualization-js/backgrounds.js";import{getLocalStorage,defaultLS}from"./localStorage.js";Object.defineProperty(HTMLImageElement.prototype,"relativeSrc",{get:function(){return new URL(this.src).pathname}});const html=t=>t[0],ENUJF388={meteor:meteors,laser:lasers,player:players,background:backgrounds};function listOfImgs(t){return t=t.split("-")[1],ENUJF388[t].map(function(e){return`/img/${t}s/${e}`})}const $modalView=document.querySelector(".modal-view"),$startUpBtns=Array.from(document.querySelectorAll("button[name=start-up-btn]"));let VISUAL_BODY_FLAG;const add_htp=function(){document.body.classList.add("htp-open")},remove_htp=function(){document.body.classList.remove("htp-open")},add_modal=function(){document.body.classList.add("open-modal")},remove_modal=function(){document.body.classList.remove("open-modal"),remove_htp(),remove_settings_visualization(),remove_history()},add_settings=function(){remove_htp()},add_settings_visualization=function(){document.body.classList.add("settings-visualization-open")},remove_settings_visualization=function(){document.body.classList.remove("settings-visualization-open")},add_history=function(){document.body.classList.add("history-open")},remove_history=function(){document.body.classList.remove("history-open")};function saveSettingsLocalStorage(t){const e=t.target,a=e.parentElement.querySelector("small");a.textContent=`${"range"!=e.type?"":e.value}`;const n=e.dataset.pathname.split("/");if(n.includes("game-audio")&&(this[n[0]][n[1]].volume=parseFloat(e.value)),(n.includes("game-settings")||n.includes("player"))&&(this[n[0]][n[1]]=parseFloat(e.value)),n.includes("custom-bg")){const t=e.parentElement.querySelector("input[type=color]"),o=e.parentElement.querySelector("input[type=checkbox]");this[n[0]][n[1]].active=o.checked,this[n[0]][n[1]].color=t.value,document.documentElement.style.setProperty("--background-url",o.checked?t.value:`url(${getLocalStorage("game_info").game_visual["visual-background"].src})`),a.textContent=t.value}localStorage.setItem("game_info",JSON.stringify(this))}const openArg={htp:{name:"htp",textContent:'\n<button type="button" class="close-btn">\n  <ion-icon name="close-outline"></ion-icon>\n</button>\n<div class="img-magnifier-container">\n  <h1>this is how u play the game</h1>\n  <img src="./images/keyboard-layout.png" class="modal-big-image-layout" />\n</div>',action:add_htp},settings:{name:"settings",textContent:'\n    <button type="button" class="close-btn">\n  <ion-icon name="close-outline"></ion-icon>\n</button>\n<header class="settings-header">\n  <ul>\n    <li class="settings-li-active">\n      <button type="button" name="settings-general-btn" class="settings-nav-btn" data-arg="SGT">General</button>\n    </li>\n    <li>\n      <button type="button" name="settings-visualization-btn" class="settings-nav-btn"\n        data-arg="SVT">Visual</button>\n    </li>\n  </ul>\n</header>\n<article class="settings-content-container">\n\n</article>\n ',action:add_settings},SGT:function(){return`<section class="settings-general-section">\n  <h1>SOUND</h1>\n  <ul>\n    <li>\n      <label for="blast-audio"> Blast Audio: </label>\n      <input type="range" name="blast-audio" min="0" step="0.01" max="1" value="${getLocalStorage("game_info")["game-audio"]["blast-audio"].volume}" data-pathName="game-audio/blast-audio"/>\n      <small>${getLocalStorage("game_info")["game-audio"]["blast-audio"].volume}</small>\n      </li>\n      <li>\n      <label for="laser-shoot-audio"> Laser shoot Audio:</label>\n      <input type="range" name="laser-shoot-audio" min="0" step="0.01" max="1" value="${getLocalStorage("game_info")["game-audio"]["shoot-audio"].volume}" data-pathName="game-audio/shoot-audio"/>\n      <small>${getLocalStorage("game_info")["game-audio"]["shoot-audio"].volume}</small>\n    </li>\n    <li>\n      <label for="background-music-settings">Background music</label>\n      <input type="range" name="background-music-settings" min="0" step="0.01" max="1" value="${getLocalStorage("game_info")["game-audio"]["shoot-audio"].volume}" data-pathName="game-audio/bg-audio"/>\n      <small>${getLocalStorage("game_info")["game-audio"]["bg-audio"].volume}</small>\n    </li>\n  </ul>\n  <h1>PLAYER</h1>\n  <ul>\n    <li>\n      <label for="player-acceleration">Player Acceleration</label>\n      <input type="range" name="player-acceleration" min="0.1" step="0.1" max="300" value="${getLocalStorage("game_info").player.acceleration}" data-pathName="player/acceleration"/>\n      <small>${getLocalStorage("game_info").player.acceleration}</small>\n    </li>\n  </ul>\n  <h1>GAME</h1>\n  <ul>\n    <li>\n      <label for="game-maxScore-settings">Max score</label>\n      <input type="range" name="game-maxScore-settings" min="5" max="200" value="${getLocalStorage("game_info")["game-settings"]["max-score"]}" data-pathName="game-settings/max-score"/>\n      <small>${getLocalStorage("game_info")["game-settings"]["max-score"]}</small>\n    </li>\n    <li>\n      <label for="game-upgradeLevel-settings">Upgrade Level</label>\n      <input type="range" name=game-upgradeLevel-settings min="5" max="200" value="${getLocalStorage("game_info")["game-settings"]["upgrade-score"]}" data-pathName="game-settings/upgrade-score"/>\n      <small>${getLocalStorage("game_info")["game-settings"]["upgrade-score"]}</small>\n    </li>\n  </ul>\n  <h1>CUSTOM VISUAL</h1>\n  <ul> \n  <li>\n  <label for="custom-background-color">Custom Background Color</label>\n  <input type="checkbox" name="custom-bg-check" data-pathName="custom-visual/custom-bg" ${getLocalStorage("game_info")["custom-visual"]["custom-bg"].active?"checked":""}>  <br>\n  <input type="color" name="custom-background-color" data-pathName="custom-visual/custom-bg" value="${getLocalStorage("game_info")["custom-visual"]["custom-bg"].color}">\n  <small>${getLocalStorage("game_info")["custom-visual"]["custom-bg"].color}</small>\n  </li>\n  </ul>\n  <button name="gen-default-btn">Set all settings to default</button>\n</section>`},SVT:function(){return'<header>\n    <ul class="nav-bodies-of-arena">\n      <li><button type="button" name="visualization-bodies-btn" data-type="visual-background">Background</button></li>\n      <li><button type="button" name="visualization-bodies-btn" data-type="visual-meteor">Meteor</button></li>\n      <li><button type="button" name="visualization-bodies-btn" data-type="visual-laser">Laser</button></li>\n      <li class="bodies-li-active"><button type="button" name="visualization-bodies-btn"\n          data-type="visual-player">Player</button></li>\n    </ul>\n  </header>\n  <article class="img-list">\n    <ul>\n    </ul>\n  </article>'},history:{name:"history",textContent:`\n<button type="button" class="close-btn">\n<ion-icon name="close-outline"></ion-icon>\n</button>\n \n         <button type="button" class="close-btn">\n         <ion-icon name="close-outline"></ion-icon>\n       </button>\n\n       <section>\n         <h1>Info</h1>\n         <ul>\n           <li>Games: <span>${getLocalStorage("game_info").gamePlay_info.length}</span></li>\n         </ul>\n       </section>\n\n       <section class="container-data column-data">\n         <div class="layout-btn-container">\n           <button class="layout-btn active" name="column-data">Column</button>\n         <button class="layout-btn" name="grid-data">Grid</button>\n         </div>\n         <section class="container-of-article">\n         \n         </section>\n       </section>\n\n    \n       </section>\n   `,action:add_history}};function openModal(t){new Promise((e,a)=>{if("start"!=t){const a=openArg[t];return"history"==t&&(getLocalStorage("game_info").gamePlay_info.length||(a.textContent='\n          <button type="button" class="close-btn">\n          <ion-icon name="close-outline"></ion-icon>\n          </button>\n          <small>no games yet</small>\n          ')),add_modal(),a.action(),$modalView.innerHTML=a.textContent,void e(t)}INIT(),e()}).then(t=>{if(t){const e=function(t){t.target.classList.contains("modal-view-container")&&(window.removeEventListener("click",e),remove_modal())};window.addEventListener("click",e),document.body.querySelector(".close-btn").onclick=remove_modal,"settings"==t&&SETTINGS_FUNCTION(),"history"==t&&HISTORY_FUNCTION()}})}function GetFormat(t){this.unix=t}function HISTORY_FUNCTION(){const t=document.querySelector(".container-of-article"),e=document.querySelector(".container-data");let a;Array.from(document.querySelectorAll(".layout-btn")).forEach(t=>{t.classList.contains("active")&&(e.classList.add(t.name),a=t),t.addEventListener("click",function(){a.classList.remove("active"),this.classList.add("active"),e.classList.remove(a.name),e.classList.add(this.name),a=this})});const n=getLocalStorage("game_info").gamePlay_info;n.length&&(t.innerHTML=n.map((t,e)=>{const a=new GetFormat(t["date-initialized"]);a.get12Hours();const n=new GetFormat(t["date-finished"]);n.get12Hours();const o=t["final-score"],s=t["times-shoot"],i=t.status,l=t["target-score"],c=t["upgrade-level"],r=t["player-acceleration"];return`<article class="article-container">\n      <header class="data-title">GAME 1</header>\n      <section class="gameInf-container">\n        <section class="gameInf-1">\n          <ul>\n            <li>Game Duration:<span class="answer"> ${Math.abs((n.unix-a.unix)/1e3)} seconds</span></li>\n            <li>Start: <span class="answer"> ${a.format}</span</li>\n            <li>Finish: <span class="answer"> ${n.format}</span</li>\n            <li>Status: <span class="answer"> ${i}</span</li>\n          </ul>\n        </section>\n        <section class="gameInf-2">\n          <ul>\n            <li>Final Score: <span class="answer"> ${o}</span</li>\n            <li>Upgrade Level:<span class="answer"> ${c}</span</li>\n            <li>Target Score: <span class="answer"> ${l}</span</li></li>\n          </ul>\n        </section>\n        <section class="gameInf-3">\n          <ul>\n            <li>Laser shoot:<span class="answer"> ${s} </span</li>\n            <li>Player Acceleration:<span class="answer"> ${r}</span</li>\n          </ul>\n        </section>\n      </section>\n    </article>`}).join(""))}function SETTINGS_FUNCTION(){const t=Array.from(document.querySelectorAll(".settings-nav-btn")),e=document.querySelector(".settings-content-container");t.forEach(a=>{a.parentElement.classList.contains("settings-li-active")&&(e.innerHTML=openArg[a.dataset.arg]()),SETTINGS_FORM_FUNCTION(),a.onclick=function(a){if(t.forEach(t=>t.parentElement.classList.remove("settings-li-active")),this.parentElement.classList.add("settings-li-active"),e.innerHTML=openArg[this.dataset.arg](),"settings-visualization-btn"==this.name){add_settings_visualization();const t=Array.from(document.querySelectorAll("button[name=visualization-bodies-btn]")),e=document.querySelector(".img-list > ul");t.forEach(a=>{function n(){var t=Array.from(e.querySelectorAll("ul > li"));document.querySelector(".bodies-li-active"),t.forEach(t=>t.classList.remove("display")),this.classList.add("display");const a=this.querySelector("img"),n=a.relativeSrc,o=parseFloat(a.dataset.id),s=VISUAL_BODY_FLAG,i={id:o,src:n,type:s},l=getLocalStorage("game_info");l.game_visual[s]=i,localStorage.setItem("game_info",JSON.stringify(l)),"visual-background"==s&&document.documentElement.style.setProperty("--background-url",getLocalStorage("game_info")["custom-visual"]["custom-bg"].active?getLocalStorage("game_info")["custom-visual"]["custom-bg"].color:`url(${getLocalStorage("game_info").game_visual["visual-background"].src})`)}VISUAL_BODY_FLAG=a.dataset.type,e.innerHTML=listOfImgs(a.dataset.type).map((t,e)=>`<li class=${getLocalStorage("game_info").game_visual[a.dataset.type].id==e?"display":""}>\n            <img src="${t}" alt="${t}" data-id="${e}"/>\n            </li>`).join(""),Array.from(e.querySelectorAll("ul > li")).forEach(t=>{t.onclick=n}),a.onclick=function(){t.forEach(t=>t.parentElement.classList.remove("bodies-li-active")),this.parentElement.classList.add("bodies-li-active"),VISUAL_BODY_FLAG=this.dataset.type,e.innerHTML=listOfImgs(this.dataset.type).map((t,e)=>`<li class=${getLocalStorage("game_info").game_visual[this.dataset.type].id==e?"display":""}>\n              <img src="${t}" alt="${t}" data-id="${e}"/>\n              </li>`).join(""),Array.from(e.querySelectorAll("ul > li")).forEach(t=>{t.onclick=n})}})}"settings-general-btn"==this.name&&(SETTINGS_FORM_FUNCTION(),remove_settings_visualization())}})}function SETTINGS_FORM_FUNCTION(){const t=Array.from(document.querySelectorAll(".settings-general-section > ul > li > input")),e=document.querySelector("button[name=gen-default-btn]");document.querySelector(".settings-content-container"),e.addEventListener("click",async function(){defaultLS.gamePlay_info=await getLocalStorage("game_info").gamePlay_info,await localStorage.setItem("game_info",JSON.stringify(defaultLS)),document.documentElement.style.setProperty("--background-url",getLocalStorage("game_info")["custom-visual"]["custom-bg"].active?getLocalStorage("game_info")["custom-visual"]["custom-bg"].color:`url(${getLocalStorage("game_info").game_visual["visual-background"].src})`),openModal("settings")}),t.forEach(t=>{t.addEventListener("input",saveSettingsLocalStorage.bind(getLocalStorage("game_info")))})}GetFormat.prototype.get12Hours=function(){this.date=new Date(this.unix),this.meridiem=this.date.getHours()>12?"pm":"am",this.hours=this.date.getHours()%12,this.minutes=this.date.getMinutes(),this.seconds=this.date.getSeconds(),this.formatTime=`${this.hours}:${this.minutes}:${this.seconds} ${this.meridiem}`,this.day=this.date.getDate(),this.month=this.date.getMonth(),this.year=this.date.getFullYear(),this.formatDate=`${this.year}/${this.month}/${this.day}`,this.format=`${this.formatDate} ${this.formatTime}`},$startUpBtns.forEach(t=>{t.addEventListener("click",function(){openModal(this.dataset.id)})});